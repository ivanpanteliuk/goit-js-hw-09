{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAmCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IA1CQQ,SAASC,cAAc,SAE/BC,iBAAiB,UAaxB,SAAsBC,GACpBA,EAAIC,iBAGJ,IAFA,IAAgCC,EAAAF,EAAIG,cAAcC,SAA1CC,EAAwBH,EAAxBb,MAAOiB,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OACjBC,EAAeC,OAAOJ,EAAMK,OACvBC,EAAI,EAAGA,GAAKF,OAAOF,EAAOG,OAAQC,GAAK,EAC9CxB,EAAcwB,EAAGH,GACdI,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACjByB,QAAQC,IAAI,uBAAwCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,OAC1DJ,EAAAgC,OAAOC,QAAQ,uBAAwCF,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAE9D8B,OAAM,SAAAN,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAClByB,QAAQC,IAAI,sBAAuCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,OACzDJ,EAAAgC,OAAOG,QAAQ,sBAAqCJ,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAE9DmB,GAAgBC,OAAOH,EAAKI,M,IAzBhCzB,EAAAgC,OAAOI,KAAK,CACVC,MAAO,QACPlC,SAAU,YACVmC,SAAU,OACVC,KAAK,EACLC,QAAS,IACTC,cAAc,EACdC,SAAU,OACVC,kBAAmB,Q","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', onFormSubmit);\n\nNotify.init({\n  width: '400px',\n  position: 'right-top',\n  distance: '20px',\n  rtl: true,\n  timeout: 3000,\n  clickToClose: true,\n  fontSize: '20px',\n  cssAnimationStyle: 'zoom',\n});\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = evt.currentTarget.elements;\n  let currentDelay = Number(delay.value);\n  for (let i = 1; i <= Number(amount.value); i += 1) {\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    currentDelay += Number(step.value);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","evt","preventDefault","_elements","currentTarget","elements","delay1","step","amount","currentDelay","Number","value","i","then","param","console","log","concat","Notify","success","catch","failure","init","width","distance","rtl","timeout","clickToClose","fontSize","cssAnimationStyle"],"version":3,"file":"03-promises.99d3b59b.js.map"}