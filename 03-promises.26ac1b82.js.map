{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAmCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA1CEQ,SAASC,cAAc,SAE/BC,iBAAiB,UAaxB,SAAsBC,GACpBA,EAAIC,iBACJ,MAAQZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAIK,cAAcC,SAClD,IAAIC,EAAeC,OAAON,EAAMO,OAChC,IAAK,IAAIC,EAAI,EAAGA,GAAKF,OAAOJ,EAAOK,OAAQC,GAAK,EAC9CvB,EAAcuB,EAAGH,GACdI,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MACjBuB,QAAQC,IAAI,uBAAqBzB,QAAiBC,OAClDJ,EAAA6B,OAAOC,QAAQ,uBAAqB3B,QAAiBC,MAAU,IAEhE2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBuB,QAAQC,IAAI,sBAAoBzB,QAAiBC,OACjDJ,EAAA6B,OAAOG,QAAQ,sBAAoB7B,QAAeC,MAAU,IAEhEkB,GAAgBC,OAAOL,EAAKM,M,IAzBhCxB,EAAA6B,OAAOI,KAAK,CACVC,MAAO,QACP/B,SAAU,YACVgC,SAAU,OACVC,KAAK,EACLC,QAAS,IACTC,cAAc,EACdC,SAAU,OACVC,kBAAmB","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', onFormSubmit);\n\nNotify.init({\n  width: '400px',\n  position: 'right-top',\n  distance: '20px',\n  rtl: true,\n  timeout: 3000,\n  clickToClose: true,\n  fontSize: '20px',\n  cssAnimationStyle: 'zoom',\n});\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = evt.currentTarget.elements;\n  let currentDelay = Number(delay.value);\n  for (let i = 1; i <= Number(amount.value); i += 1) {\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    currentDelay += Number(step.value);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","evt","preventDefault","delay1","step","amount","currentTarget","elements","currentDelay","Number","value","i","then","console","log","Notify","success","catch","failure","init","width","distance","rtl","timeout","clickToClose","fontSize","cssAnimationStyle"],"version":3,"file":"03-promises.26ac1b82.js.map"}